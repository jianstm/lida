#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'applescript'
require 'rainbow/refinement'
using Rainbow

program :name, 'Lida'
program :version, '0.0.2'
program :description, 'Finder to terminal; Xcode to terminal; Terminal to finder'
program :help, 'Author', 'Quentin Jin <jianstm@gmail.com>'

# Terminal to finder
command :terminal do |c|
  c.syntax = 'lida finder'
  c.description = 'Open working directory of current terminal in finder'
  c.action do
    `open -a Finder ./`
  end
end

# Xcode to terminal
command :xcode do |c|
  c.syntax = 'lida xcode'
  c.description = 'Open current xcode dir in a new tab of current terminal'
  c.action do
    begin
      path = get_current_path_of_xcode 'Xcode'
    rescue
      puts 'No active window or file on Xcode.'.red
    end

    open_path path if path
  end
end

# Xcode-beta to terminal
command :xcodebeta do |c|
  c.syntax = 'lida xcodebeta'
  c.description = 'Open current xcode dir in a new tab of current terminal'
  c.action do
    begin
      path = get_current_path_of_xcode 'Xcode-beta'
    rescue
      puts 'No active window or file on Xcode-beta.'.red
    end

    open_path path if path
  end
end

# Finder to terminal
command :finder do |c|
  c.syntax = 'lida terminal'
  c.description = 'Open current finder dir in a new tab of current terminal'
  c.action do
    begin
      path = get_current_path_of_finder
    rescue
      puts 'No active window on Finder.'.red
    end
    open_path path if path
  end
end

alias_command :f, :finder
alias_command :x, :xcode
alias_command :xb, :xcodebeta
default_command :terminal

def get_current_path_of_xcode(xcode)
  script = <<~EOS
    tell application "#{xcode}"
      set CurrentDocument to document 1 whose name ends with (word -1 of (get name of window 1))
      set CurrentPath to path of CurrentDocument
      return CurrentPath
    end tell
  EOS
  begin
    path = AppleScript.execute(script)
  rescue
    raise NoWindowError
  end
  path
end

def get_current_path_of_finder
  script = <<~EOS
    tell application "Finder"
      if (count of windows) is 0 then
        set CurrentPath to "nitneuq"
      else
        set CurrentPath to (POSIX path of (folder of the front window as alias))
      end if
    end tell
    return CurrentPath
  EOS

  path = AppleScript.execute(script)
  raise NoWindowError if path =~ /nitneuq/
  path
end

def is_terminal_or_iterm
  script = <<-eos
    set AppPath to (path to frontmost application as text)
    return AppPath
  eos
  if AppleScript.execute(script) =~ /Terminal.app/; 0
  elsif AppleScript.execute(script) =~ /iTerm.app/; 1
  else; -1
  end
end

def open_path(path)
  path.chomp!
  path = File.split(path)[0] unless File.directory?(path)
  flag = is_terminal_or_iterm
  if flag == 0
    open_path_in_terminal path
  elsif flag == 1
    open_path_in_iterm path
  else
    puts 'Lida only supports iterm and terminal for now.'.red
  end
end

def open_path_in_iterm(dic)
  script = <<~EOS
    set command to "cd #{dic}"
    tell application "iTerm"
      select first window
      tell the first window
        create tab with default profile
        tell current session to write text "clear"
        tell current session to write text command
      end tell
    end tell
  EOS
  AppleScript.execute(script)
end

def open_path_in_terminal(path)
  script = <<~EOS
    tell application "Terminal"
      activate
      tell application "System Events" to keystroke "t" using command down
        delay 1
      do script ("clear") in first window
      do script ("cd #{path}") in first window
     end tell
  EOS
  AppleScript.execute(script)
end

class NoWindowError < StandardError
end
